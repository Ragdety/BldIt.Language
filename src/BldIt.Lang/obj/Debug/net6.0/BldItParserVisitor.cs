//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\ragde\OneDrive\Desktop\Programming\BldIt\BldIt.Language\src\BldIt.Lang\Grammar\BldItParser.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace BldIt.Lang.Grammar {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="BldItParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IBldItParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>constantExpr</c>
	/// labeled alternative in <see cref="BldItParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstantExpr([NotNull] BldItParser.ConstantExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>identifierExpr</c>
	/// labeled alternative in <see cref="BldItParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierExpr([NotNull] BldItParser.IdentifierExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>functionCallExpr</c>
	/// labeled alternative in <see cref="BldItParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCallExpr([NotNull] BldItParser.FunctionCallExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>parenthesizedExpr</c>
	/// labeled alternative in <see cref="BldItParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesizedExpr([NotNull] BldItParser.ParenthesizedExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>notExpr</c>
	/// labeled alternative in <see cref="BldItParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpr([NotNull] BldItParser.NotExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>multiplicativeExpr</c>
	/// labeled alternative in <see cref="BldItParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeExpr([NotNull] BldItParser.MultiplicativeExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>additiveExpr</c>
	/// labeled alternative in <see cref="BldItParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpr([NotNull] BldItParser.AdditiveExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>comparisonExpr</c>
	/// labeled alternative in <see cref="BldItParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonExpr([NotNull] BldItParser.ComparisonExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>booleanExpr</c>
	/// labeled alternative in <see cref="BldItParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanExpr([NotNull] BldItParser.BooleanExprContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.bldItFile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBldItFile([NotNull] BldItParser.BldItFileContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatements([NotNull] BldItParser.StatementsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] BldItParser.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.simpleStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleStatement([NotNull] BldItParser.SimpleStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.compoundStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompoundStatement([NotNull] BldItParser.CompoundStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] BldItParser.IfStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.singleIfBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingleIfBlock([NotNull] BldItParser.SingleIfBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.elseIfBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseIfBlock([NotNull] BldItParser.ElseIfBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.elseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseBlock([NotNull] BldItParser.ElseBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] BldItParser.WhileStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.functionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDefinition([NotNull] BldItParser.FunctionDefinitionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameters([NotNull] BldItParser.ParametersContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] BldItParser.BlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.functionBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionBlock([NotNull] BldItParser.FunctionBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] BldItParser.ReturnStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] BldItParser.AssignmentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] BldItParser.FunctionCallContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] BldItParser.ExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.parenthExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthExpression([NotNull] BldItParser.ParenthExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.notExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpression([NotNull] BldItParser.NotExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.multOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultOp([NotNull] BldItParser.MultOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.addOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddOp([NotNull] BldItParser.AddOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.compareOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompareOp([NotNull] BldItParser.CompareOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.boolOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolOp([NotNull] BldItParser.BoolOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstant([NotNull] BldItParser.ConstantContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.pipeline"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPipeline([NotNull] BldItParser.PipelineContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.globalEnvStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalEnvStatement([NotNull] BldItParser.GlobalEnvStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.parameterStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterStatement([NotNull] BldItParser.ParameterStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.stagesStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStagesStatement([NotNull] BldItParser.StagesStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.globalEnvBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalEnvBlock([NotNull] BldItParser.GlobalEnvBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.parameterBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterBlock([NotNull] BldItParser.ParameterBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.stagesBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStagesBlock([NotNull] BldItParser.StagesBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.stageStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStageStatement([NotNull] BldItParser.StageStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.stageBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStageBlock([NotNull] BldItParser.StageBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.stepStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStepStatement([NotNull] BldItParser.StepStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.simpleStepStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleStepStatement([NotNull] BldItParser.SimpleStepStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.pipelineSimpleStepCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPipelineSimpleStepCall([NotNull] BldItParser.PipelineSimpleStepCallContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.compoundStepStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompoundStepStatement([NotNull] BldItParser.CompoundStepStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.handleErrorStep"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHandleErrorStep([NotNull] BldItParser.HandleErrorStepContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.handleErrorBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHandleErrorBlock([NotNull] BldItParser.HandleErrorBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.scriptStep"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitScriptStep([NotNull] BldItParser.ScriptStepContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.scriptBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitScriptBlock([NotNull] BldItParser.ScriptBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.scriptStatements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitScriptStatements([NotNull] BldItParser.ScriptStatementsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.scriptStatament"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitScriptStatament([NotNull] BldItParser.ScriptStatamentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.envAssignments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnvAssignments([NotNull] BldItParser.EnvAssignmentsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.envAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnvAssignment([NotNull] BldItParser.EnvAssignmentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.paramAssignments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParamAssignments([NotNull] BldItParser.ParamAssignmentsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.paramAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParamAssignment([NotNull] BldItParser.ParamAssignmentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.paramValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParamValue([NotNull] BldItParser.ParamValueContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="BldItParser.pipelineExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPipelineExpression([NotNull] BldItParser.PipelineExpressionContext context);
}
} // namespace BldIt.Lang.Grammar
